var game=new Phaser.Game(screen.width*.8,screen.height*.65,Phaser.AUTO,"gameDiv");var mainState={health:4,life:4,score:0,thresholdScore:35,flawPositionTime:0,stoneSpeed:-300,fishSpeed:-300,netSpeed:0,arrowSpeed:0,totalFish:[0,0,0,0,0,0,0],userFish:[0,0,0,0,0,0,0],totalObstacle:[0,0,0],userHitObstacle:[0,0,0],userTimer:0,patternScore:0,totalPatternsDisplayed:1,level:1,preload:function(){game.load.image("background","assets/Lbackground.jpg");game.load.image("shark","assets/shark.png");game.load.image("sharkLine","assets/line.png");start=true;game.load.image("stone","assets/stone.png");game.load.image("arrow","assets/arrow.png");game.load.image("arrowLine","assets/hline.png");game.load.image("net","assets/net.png");game.load.image("netLine","assets/hline.png");game.load.image("greenFish","assets/greenFish.png");game.load.image("pinkFish","assets/pinkFish.png");game.load.image("blueFish","assets/Blue-Fish.gif");game.load.image("goldFish","assets/goldfish.png");game.load.image("megaFish","assets/Star.gif");game.load.image("poisonFish","assets/red_fish.gif");game.load.image("fighterShark","assets/fighterFish.png");game.load.audio("tada","audio/tada.wav");game.load.audio("lostLife","audio/lostLife.wav");game.load.audio("upSound","audio/up.wav");game.load.audio("gameOverSound","audio/gameOver.wav");game.load.audio("reduceHealthSound","audio/reduceHealth.wav");game.load.audio("increaseHealthSound","audio/increaseHealth.wav");game.load.audio("levelSound","audio/level.wav")},create:function(){game.physics.startSystem(Phaser.Physics.ARCADE);this.background=this.game.add.sprite(0,0,"background");this.background.height=screen.height*.65;this.background.width=screen.width*.8;this.shark=this.game.add.sprite(this.background.width*.1,this.background.height*.4,"shark");this.shark.height=this.background.height*.13;this.shark.width=this.background.width*.13;this.sharkLine=this.game.add.sprite(this.background.width*.1+this.shark.width-15,this.background.height*.4+this.shark.height-35,"sharkLine");this.sharkLine.height=25;this.sharkLine.width=14;game.physics.arcade.enable(this.shark);game.physics.arcade.enable(this.sharkLine);this.fishes=game.add.group();this.fishes.enableBody=true;for(var e=0;e<20;e++){this.fishes.create(0,0,"greenFish",null,false);if(e<16)this.fishes.create(0,0,"pinkFish",null,false);if(e<7)this.fishes.create(0,0,"poisonFish",null,false);if(e<4){this.fishes.create(0,0,"megaFish",null,false);this.fishes.create(0,0,"blueFish",null,false);this.fishes.create(0,0,"fighterShark",null,false)}if(e<2){this.fishes.create(0,0,"goldFish",null,false)}}this.nets=game.add.group();this.nets.enableBody=true;this.nets.createMultiple(3,"net");this.netsLine=game.add.group();this.netsLine.enableBody=true;this.netsLine.createMultiple(3,"netLine");this.stones=game.add.group();this.stones.enableBody=true;this.stones.createMultiple(15,"stone");this.arrows=game.add.group();this.arrows.enableBody=true;this.arrows.createMultiple(5,"arrow");this.arrowsLine=game.add.group();this.arrowsLine.enableBody=true;this.arrowsLine.createMultiple(5,"arrowLine");spaceKey=this.game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);spaceKey.onDown.add(this.jump,this);this.fishPattern=game.add.group();this.fishPattern.enableBody=true;this.fishPattern.create(0,0,"greenFish",null,false);this.fishPattern.create(0,0,"pinkFish",null,false);this.fishPattern.create(0,0,"blueFish",null,false);this.fishPattern.create(0,0,"pinkFish",null,false);this.fishPattern.create(0,0,"greenFish",null,false);this.patternFishCount=0;this.prevIndex=0;this.timeCheck=game.time.now+1e4;game.add.text(540,20,"Level:",{font:"30px Arial",fill:"#ffffff"});this.labelLevel=game.add.text(640,20,this.level+"",{font:"30px Arial",fill:"#ffffff"});game.add.text(20,20,"Score:",{font:"30px Arial",fill:"#ffffff"});this.labelScore=game.add.text(110,20,this.score+"",{font:"30px Arial",fill:"#ffffff"});game.add.text(170,20,"Health:",{font:"30px Arial",fill:"#ffffff"});this.labelHealth=game.add.text(270,20,this.health,{font:"30px Arial",fill:"#ffffff"});game.add.text(320,20,"Life:",{font:"30px Arial",fill:"#ffffff"});this.labelLife=game.add.text(380,20,this.life+"",{font:"30px Arial",fill:"#ffffff"});game.add.text(this.background.width*.8,15,"Time:",{font:"30px Arial",fill:"#ffffff"});this.labelTimer=game.add.text(this.background.width*.8+150,15,this.userTimer+"",{font:"30px Arial",fill:"#ffffff"});this.lifeSound=game.add.audio("tada");this.lostLifeSound=game.add.audio("lostLife");this.upSound=game.add.audio("upSound");this.gameOverSound=game.add.audio("gameOverSound");this.reduceHealthSound=game.add.audio("reduceHealthSound");this.increaseHealthSound=game.add.audio("increaseHealthSound");this.levelSound=game.add.audio("levelSound");this.up=false;this.boundaryHeightForSafePosition=this.background.height*.25},update:function(){if(!start){if(this.patternFishCount>4){this.timeCheck=game.time.now+2e4;this.patternFishCount=0}else{if(game.time.now-this.timeCheck>=150){this.addFishPattern();this.timeCheck=game.time.now+200;if(this.patternFishCount===4){this.totalPatternsDisplayed+=1}this.patternFishCount++}}}if(this.shark.y<this.boundaryHeightForSafePosition&&!this.up){this.start=game.time.now;this.up=true}else if(this.shark.y>this.boundaryHeightForSafePosition&&this.up&&this.start>0){this.flawPositionTime+=(game.time.now-this.start)/1e3;this.up=false}if(this.shark.inWorld==false)this.reduceLife();game.physics.arcade.overlap(this.shark,this.stones,this.reduceHealthStone,null,this);game.physics.arcade.overlap(this.shark,this.arrowsLine,this.reduceHealthArrow,null,this);game.physics.arcade.overlap(this.shark,this.arrows,this.killArrow,null,this);game.physics.arcade.overlap(this.sharkLine,this.fishes,this.hideFish,null,this);game.physics.arcade.overlap(this.shark,this.netsLine,this.reduceLife,this.hitNetObstacle,this);game.physics.arcade.overlap(this.sharkLine,this.fishPattern,this.hideFish,this.addPatternScore,this)},killArrow:function(e,t){t.kill()},displayNet:function(){this.addNet()},addNet:function(){if(this.nets.countLiving()>0){return}else{var e=this.nets.getFirstDead();var t=this.netsLine.getFirstDead();e.height=this.background.height*.13;e.width=this.background.width*.13;x=(Math.random()*.5+.5)*this.background.width;y=this.background.height*.1;e.reset(x,y);var n=Math.floor(Math.random()*-300);var r=Math.floor(Math.random()*100)+40;e.body.velocity.x=n+this.netSpeed;e.body.velocity.y=r-this.netSpeed/4;this.totalObstacle[2]++;e.checkWorldBounds=true;e.outOfBoundsKill=true;t.height=15;t.width=e.width;t.reset(x,y+45);t.body.velocity.x=n+this.netSpeed;t.body.velocity.y=r-this.netSpeed/4;t.checkWorldBounds=true;t.outOfBoundsKill=true}},hitNetObstacle:function(){this.userHitObstacle[2]++;return true},addFish:function(){var e=this.fishes.getRandom();while(e.alive){e=this.fishes.getRandom()}this.fishCount(this.totalFish,e.key);var t=Math.floor(Math.random()*this.background.height*.6)+this.background.height*.2;e.reset(this.background.width-50,t);e.body.velocity.x=this.fishSpeed;if(e.key!=="fighterShark"&&e.key!=="megaFish"){e.width=this.background.width*.07;e.height=this.background.height*.07}else if(e.key!=="megaFish"){e.width=this.background.width*.15;e.height=this.background.height*.15}else{e.width=this.background.width*.07;e.height=this.background.height*.1}e.checkWorldBounds=true;e.outOfBoundsKill=true},displayFishes:function(){this.addFish()},fishCount:function(e,t){switch(t){case"greenFish":e[0]++;break;case"pinkFish":e[1]++;break;case"megaFish":e[2]++;break;case"poisonFish":e[3]++;break;case"blueFish":e[4]++;break;case"goldFish":e[5]++;break;case"fighterShark":e[6]++;break}},userScore:function(e){switch(e.key){case"greenFish":this.score+=1;this.labelScore.text=this.score;this.updateLevel();break;case"pinkFish":this.score+=2;this.labelScore.text=this.score;this.updateLevel();break;case"megaFish":this.score+=3;this.labelScore.text=this.score;this.updateLevel();break;case"poisonFish":this.reduceHealth(2);this.labelHealth.text=this.health;break;case"blueFish":this.increaseHealth();this.labelHealth.text=this.health;break;case"goldFish":this.increaseLife();this.labelLife.text=this.life;break;case"fighterShark":this.reduceLife();this.labelLife.text=this.life;break}},reduceHealth:function(e){if(this.health<=e)this.reduceLife();else{this.reduceHealthSound.play();this.health-=e;this.labelHealth.text=this.health}},increaseHealth:function(){if(this.health<4){this.increaseHealthSound.play();this.health++}},increaseLife:function(){if(this.life<4){this.lifeSound.play();this.life++}},updateLevel:function(){if(this.score>this.thresholdScore&&this.thresholdScore<120){this.level++;this.labelLevel.text=this.level;this.levelSound.play();this.stoneSpeed*=1.3;this.fishSpeed*=1.3;this.netSpeed-=220;this.arrowSpeed+=220;this.thresholdScore*=1.6}},hideFish:function(e,t){this.userScore(t);this.fishCount(this.userFish,t.key);t.kill()},reduceHealthArrow:function(e,t){this.reduceHealth(1);this.userHitObstacle[1]++;t.kill()},reduceHealthStone:function(e,t){this.reduceHealth(2);this.userHitObstacle[0]++;t.kill()},reduceLife:function(e,t){if(this.life==0){this.stopGame()}else{this.lostLifeSound.play();this.life-=1;this.health=4;this.labelHealth.text=this.health;this.labelLife.text=this.life+"";this.restartGame()}},stopGame:function(){this.gameOverSound.play();for(var e=0;e<1e4;e++);var t=game.time.now;if(this.up){this.flawPositionTime+=(game.time.now-this.start)/1e3}var n="/FishPond/register?";n+="score="+this.score+"&";n+="time="+this.userTimer+"&";n+="flawPositionTime="+this.flawPositionTime+"&";for(var r=0;r<this.totalFish.length;r++){n+="totalFish="+this.totalFish[r]+"&"}for(var r=0;r<this.userFish.length;r++){n+="userFish="+this.userFish[r]+"&"}for(var r=0;r<this.totalObstacle.length;r++){n+="totalObstacle="+this.totalObstacle[r]+"&"}for(var r=0;r<this.userHitObstacle.length;r++){n+="userHitObstacle="+this.userHitObstacle[r]+"&"}n+="patternScore="+this.patternScore+"&";n+="totalPatternsDisplayed="+this.totalPatternsDisplayed;game.destroy();window.location.assign(n)},getRandomInt:function(e,t){return Math.floor(Math.random()*(t-e+1))+e},jump:function(){this.upSound.play();this.shark.body.velocity.y=-400;this.sharkLine.body.velocity.y=-400;if(start){this.shark.body.gravity.y=900;this.sharkLine.body.gravity.y=900;start=false;this.timer=game.time.events.loop(1e3,this.updateTime,this);this.timer=game.time.events.loop(this.getRandomInt(1e3,1500),this.addObstacle,this);this.displayFishes();this.timer=game.time.events.loop(Math.floor(Math.random()*500)+500,this.displayFishes,this);this.timer=game.time.events.loop(Math.floor(Math.random()*2500)+2500,this.displayNet,this)}},restartGame:function(){game.state.restart(true,true,"main")},updateTime:function(){this.userTimer++;this.labelTimer.text=this.userTimer},addStoneObstacle:function(e,t,n){var r=this.stones.getFirstDead();r.width=this.background.width*.07;r.height=this.background.height*.07*n;r.reset(e,t);r.body.velocity.x=this.stoneSpeed;this.totalObstacle[0]++;r.checkWorldBounds=true;r.outOfBoundsKill=true},addArrowObstacle:function(e,t){var n=this.arrows.getFirstDead();var r=this.arrowsLine.getFirstDead();n.height=this.background.height*.07;n.width=this.background.width*.07;r.height=10;r.width=10;n.reset(e,t);r.reset(e,t+30);n.body.velocity.x=-this.getRandomInt(300+this.arrowSpeed,500+this.arrowSpeed);n.body.velocity.y=this.getRandomInt(100,150);r.body.velocity.x=n.body.velocity.x;r.body.velocity.y=n.body.velocity.y;this.totalObstacle[1]++;n.checkWorldBounds=true;n.outOfBoundsKill=true;r.checkWorldBounds=true;r.outOfBoundsKill=true},addObstacle:function(){var e=this.getRandomInt(1,10);if(e>6){this.addStoneObstacle(this.background.width*.92,this.background.height*(1-(e-7)*.07),e-7)}if(e<6)this.addArrowObstacle(this.getRandomInt(this.background.width*.25,this.background.width*.75),this.background.height*.1)},addFishPattern:function(){var e=this.fishPattern.getAt(this.patternFishCount);this.fishCount(this.totalFish,e.key);var t=(Math.floor(Math.random()*.2)+.1)*this.background.height;e.reset(this.background.width-50,t);e.body.velocity.x=this.fishSpeed;e.width=this.background.width*.07;e.height=this.background.height*.07;e.checkWorldBounds=true;e.outOfBoundsKill=true},addPatternScore:function(e,t){var n=this.fishPattern.getIndex(t);if(n===this.prevIndex+1&&game.time.now-this.timeCheck<5e3){if(n===4){this.patternScore+=1;this.score+=6;this.increaseHealth();this.labelScore.text=this.score;this.labelHealth.text=this.health;this.prevIndex=-1}else{this.prevIndex+=1}}return true}};game.state.add("main",mainState);game.state.start("main")
